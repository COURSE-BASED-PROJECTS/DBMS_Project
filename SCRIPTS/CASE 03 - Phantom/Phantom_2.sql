--Lấy danh sách các đối tác đã đăng ký
CREATE 
--ALTER
PROC USP_LayDSDT
AS
BEGIN TRAN
--default isolation level: not prevent T2 insert new rows
    DECLARE @SLDT INT, @MST CHAR(20)
	BEGIN TRY
		DECLARE cur CURSOR DYNAMIC FOR SELECT * FROM DOITAC
		OPEN CUR
		SET @SLDT = (SELECT COUNT(*) FROM DOITAC)
		
        WAITFOR DELAY '0:0:10'

	     PRINT N'TỔNG SỐ ĐỐI TÁC HIỆN CÓ: ' + CAST(@TONGHDDK AS VARCHAR(10))
		PRINT N'DANH SÁCH CÁC ĐỐI TÁC ĐÃ KÝ HỢP ĐỒNG'
        FETCH NEXT FROM CUR 
		WHILE (@@FETCH_STATUS = 0)
		BEGIN
			--WAITFOR DELAY '0:0:02'
			FETCH NEXT FROM CUR
		END
		CLOSE CUR
		DEALLOCATE CUR
	END TRY
	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = N'Lỗi: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
COMMIT TRAN


--THÊM ĐỐI TÁC--
CREATE
--ALTER
PROC USP_THEMDOITAC
	@MST CHAR(20),
	@DAIDIEN NVARCHAR(50),
	@TENDT NVARCHAR(50),
	@SLCN INT,
	@LOAIHANG NVARCHAR(50),
	@DIACHI NVARCHAR(200),
	@SDT CHAR(10),
	@EMAIL CHAR(50)
AS
BEGIN TRAN
	BEGIN TRY
		IF (NOT EXISTS(SELECT * FROM DOITAC WHERE MST = @MST))
		BEGIN
			INSERT DOITAC(MST,NGUOIDAIDIEN,TENDT,SLCHINHANH,LOAIHANG,DIACHI,SDT,EMAIL)
			VALUES (@MST,@DAIDIEN,@TENDT,@MACN,@SLCN,@LOAIHANG,@DIACHI,@SDT,@EMAIL)
		END
		ELSE 
		BEGIN
			PRINT N'ĐỐI TÁC NÀY ĐÃ TỒN TẠI'
			ROLLBACK TRAN
			RETURN
		END
		--WAITFOR DELAY '0:0:05'
	END TRY
	BEGIN CATCH
		DECLARE @ErrorMsg VARCHAR(2000)
		SELECT @ErrorMsg = N'Lỗi: ' + ERROR_MESSAGE()
		RAISERROR(@ErrorMsg, 16,1)
		ROLLBACK TRAN
		RETURN
	END CATCH
	PRINT N'ĐÃ THÊM THÀNH CÔNG'
COMMIT TRAN
GO